# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest Pillow pylint
        sudo apt-get install optipng
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      # C0103: Variable name naming style
      # C0303: trailing space  --  TODO remove it from disable list
      # C0301: line too long
      # C0116: Missing function or method docstring  --  TODO remove it from disable list
      # C0114: Missing module docstring  --  TODO remove it from disable list
      # C0325: Unnecessary parens after 'if' keyword
      # R0914: Too many local variables (21/15)
      # R0915: Too many statements (53/50)
      # R1705: Unnecessary "else" after "return"
      # W0718: Catching too general exception
      # W0719: Raising too general exception
      # W1514: Using open without explicitly specifying an encoding  --  TODO remove it from disable list
      run: |
        pylint \
          --indent-string='  ' \
          --disable C0103,C0303,C0301,C0116,C0114,C0325,R0914,R0915,R1705,W0718,W0719,W1514 \
            $(git ls-files '*.py')
    - name: Test with pytest
      run: |
        pytest tests/unit.py

